const Discord = require('discord.js');
const client = new Discord.Client();
const music = require('discord.js-music-v11');
const fs = require('fs');
const ytdl = require('ytdl-core');



//NjIyNzQ2MzEyOTE5NDgyMzc4.XYOZZw.tgcrKbiXrnuTfni5vvAFYWg2LOs
//NjIzOTgwMDU3OTk1NzcxOTA0.XYprzA.WoDyStRNTarTdHBU_2cWNVWb4ZU
const token = "NjIyNzQ2MzEyOTE5NDgyMzc4.XY4qEg.TWbJvb4pVgO5CtJpvCjuAJ2Z6Yc"
var prefix = 'g'
ver = '0.3.5' //version

//log
client.on('ready',  () => {

console.log(`${new Date()}`);
console.log('Starting...');
  console.log('Petrovich BETA '+ ver);
  console.log('Loading discord.js...');
  console.log('Loading modules...');
console.log('Copyright BR1ZE 2019');
console.log('Done. Bot is online!');
client.user.setActivity(prefix + 'Booo :ghost: / BETA ' + ver); 
console.log('=============================');
});
client.once('reconnecting', () => {
 console.log('Reconnecting!');
});
client.once('disconnect', () => {
 console.log('Disconnect!');
});











//Commands
// set message listener 

client.on('message', message => {
    if(message.author === client.user) return;
	/*    */
    if(message.content === (prefix + '—Ö–∞–π')) {
        message.channel.send('–ó–¥–∞—Ä–æ–≤–∞ ' + message.author.username + '!');
     }
	
	 if ((message.content === '–í—ñ—Ç–∞—é') && (message.author.id == '423195864798986240')){
    message.channel.send('–í—ñ—Ç–∞—é —Ç–µ–±–µ –æ –º—ñ–π —Ç–≤–æ—Ä–µ—Ü—å! https://tenor.com/view/blow-kisses-keanu-reeves-gif-14310726')
}


});




//YTDL

//Cstom commands
function getRandomInt(max) {
  return Math.floor(Math.random() * Math.floor(max));
}


client.on('message', message => {
    if (message.content == ('!–∑')) {
	var n = parseInt( Math.random()*4 );
	console.log(n);	
	if (n==0){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ó–∏–º–∞ –±–ª–∏–∑—å–∫–æ!!! –¶–µ –¥–æ–≤–≥–∞, —Ç–µ–º–Ω–∞, —Ö–æ–ª–æ–¥–Ω–∞ –Ω—ñ—á. –í –ª—é–¥—è—Ö –ø—Ä–æ–∫–∏–¥–∞—î—Ç—å—Å—è –∑–≤—ñ—Ä. –¢–∞ –±–æ—è—Ç–∏—Å—å —Ç—Ä–µ–±–∞ –Ω–µ –∂–∏–≤–∏—Ö...https://tenor.com/view/whitewalkers-gif-9012602');
		return;	}
	if (n==1){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ó–∏–º–∞ –±–ª–∏–∑—å–∫–æ! –°–Ω—ñ–≥ –≤–∏–ø–∞–¥–∞—î –≥–ª–∏–±–∏–Ω–æ—é –≤ —Ç—Ä–∏–¥—Ü—è—Ç—å –º–µ—Ç—Ä—ñ–≤! –õ—å–æ–¥—è–Ω–∏–π –≤—ñ—Ç–µ—Ä –¥—É—î –∑ –ø—ñ–≤–Ω–æ—á—ñ! –°–æ–Ω—Ü–µ —Å—ñ–¥–∞—î –Ω–∞ –¥–æ–≤–≥—ñ —Ä–æ–∫–∏, –∞ –¥—ñ—Ç–∏ –Ω–∞—Ä–æ–¥–∂—É—é—Ç—å—Å—è —ñ –ø–æ–º–∏—Ä–∞—é—Ç—å –≤ —Ç–µ–º—Ä—è–≤—ñ!https://tenor.com/view/game-of-thrones-white-walker-walk-fire-flames-gif-4223785');	
			return;	}
		if (n==2){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ó–∏–º–∞ –±–ª–∏–∑—å–∫–æ! –°–Ω—ñ–≥ –≤–∏–ø–∞–¥–∞—î –≥–ª–∏–±–∏–Ω–æ—é –≤ —Ç—Ä–∏–¥—Ü—è—Ç—å –º–µ—Ç—Ä—ñ–≤! –õ—å–æ–¥—è–Ω–∏–π –≤—ñ—Ç–µ—Ä –¥—É—î –∑ –ø—ñ–≤–Ω–æ—á—ñ! –°–æ–Ω—Ü–µ —Å—ñ–¥–∞—î –Ω–∞ –¥–æ–≤–≥—ñ —Ä–æ–∫–∏, –∞ –¥—ñ—Ç–∏ –Ω–∞—Ä–æ–¥–∂—É—é—Ç—å—Å—è —ñ –ø–æ–º–∏—Ä–∞—é—Ç—å –≤ —Ç–µ–º—Ä—è–≤—ñ!https://tenor.com/view/game-of-thrones-whitewalker-monster-staring-snow-gif-6144428');	
		return;		}
    if (n==3){message.channel.bulkDelete(1);
	
            message.channel.sendMessage('–ó–∏–º–∞ –±–ª–∏–∑—å–∫–æ!!! –¶–µ –¥–æ–≤–≥–∞, —Ç–µ–º–Ω–∞, —Ö–æ–ª–æ–¥–Ω–∞ –Ω—ñ—á. –í –ª—é–¥—è—Ö –ø—Ä–æ–∫–∏–¥–∞—î—Ç—å—Å—è –∑–≤—ñ—Ä. –¢–∞ –±–æ—è—Ç–∏—Å—å —Ç—Ä–µ–±–∞ –Ω–µ –∂–∏–≤–∏—Ö...https://tenor.com/view/stripping-undead-skeleton-zombie-look-at-this-gif-13899167');	}
	return;	}
});

client.on('message', message => {
    if (message.content == ('!–≥—Ä–∞')) {
	var n = parseInt( Math.random()*4 );
	console.log(n);	
	if (n==0){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ì–æ –≥—Ä–∞—Ç–∏ –ê–ø–µ–∫—Å');
		return;	}
	if (n==1){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ì–æ –≥—Ä–∞—Ç–∏ –ö–°');	
			return;	}
		if (n==2){message.channel.bulkDelete(1);
            message.channel.sendMessage('–ì–æ –≤ –°–≤–æ—é –ì—Ä—É');	
		return;		}
    if (n==3){message.channel.bulkDelete(1);
	
            message.channel.sendMessage('–ì–æ –≤ –ü—É–±–≥');	}
	return;	}
});







client.on('message', message => {
    if (message.content.startsWith ('ResTern')) {
            message.channel.sendMessage('RODIPIT');
			timerId = setInterval(() => message.channel.sendMessage('–•–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏!'), 2000);
			setTimeout(() => { clearInterval(timerId);  message.channel.sendMessage('–•–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏!') }, 2000);   
    }
});








client.on('message', message => {
    if (message.content.startsWith ('–ö–æ–≤–∞–ª—å —Ö—É–π')) {
            message.channel.sendMessage('–í–æ—ñ—Å—Ç–∏–Ω—É –•–£–ô');
			timerId = setInterval(() => message.channel.sendMessage('–•–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏!'), 2000);
			setTimeout(() => { clearInterval(timerId);  message.channel.sendMessage('–•–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏!') }, 2000);   
    }
});

//
client.on('message', message => {

if (message.content === (prefix+'1')) {
       client.channels.get('557602253809385478').sendMessage('–ô–¥–∏ –≤ –∂–æ–ø—É –∑—ñ —Å–≤–æ—ó–º–∏ —Å—Ä–æ–∫–∞–º–∏')
}	


if (message.content === '–Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?') {
        message.channel.sendMessage('–ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –ë–æ–≥–¥–∞–Ω, —è —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π BR1Z`–æ–º. –ó—Ä–æ–±–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—ñ–¥–æ–º–æ–≥–æ –≤—á–∏—Ç–µ–ª—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è. –ê —Ç–µ–±–µ —è–∫ –∑–≤–∞—Ç–∏?');
}

	if (message.content === '–©–æ —Ç–∏ –≤–º—ñ—î—à?') {
        message.channel.sendMessage('–ö–∞–≤–∏ –Ω–µ –≤–∞—Ä—é, —Å–≤—ñ—Ç –Ω–µ –∑–∞—Ö–æ–ø–ª—é—é, –∞–ª–µ —à–≤–∏–¥–∫–æ –≤—á—É—Å—å :grin:  –í–º—ñ—é –≤—ñ—Ç–∞—Ç–∏ –ª—é–¥–µ–π –ø—Ä–∏ –∑–∞—Ö–æ–¥—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.');
}
	if (message.content === '–Ø–∫ —Å–ø—Ä–∞–≤–∏?') {
        message.channel.sendMessage('–¢–∏ –¥–µ–±—ñ–ª —á–∏ —Ç–∞? –Ø –±–æ—Ç –≤ –º–µ–Ω–µ —Å–ø—Ä–∞–≤–∏ –ù–Ü–Ø–ö!');
}
	if ((message.content === '–ü—Ä–∏–≤—ñ—Ç') && (message.author.id == '447039831449665536')) {
	message.channel.sendMessage('–ü—Ä–∏–≤—ñ—Ç –Ü–≥–æ—Ä–∏—á, —è–∫ —Å—è –º–∞—î—à?');} else if (message.content === '–ü—Ä–∏–≤—ñ—Ç') {message.channel.sendMessage('–ü—Ä–∏–≤—ñ—Ç —á—É–≤–∞—á–µ');}
}); 
//Spam
/*
let timerId = setInterval(() => client.channels.get('557602253809385478').sendMessage('Hi'), 1000);
*/







client.on('guildMemberAdd', member => {
  console.log(member.user.username + ' + 1 Gamer!')
  var role1 = member.guild.roles.find('name', 'üéÆGAMERüéÆ') 
  role2 = member.guild.roles.find('name', '–ú—î–ª–∫–∏–π')
  member.addRole(role1)
member.addRole(role2)
// –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
  member.guild.channels.get('557602253809385478').send('–ó–¥–∞—Ä–æ–≤–∞ ' + member.user.username + ', –Ø–∫ –∂–∏—Ç—É—Ö–∞?') 
});




/*
var firstCall = true;
client.on('message', message => {
	if(message.content === ('RODIPIT')) {
	message.channel.send('Ti Pidar!')  
	}

		 if((message.member.id == '500002237083287552')&&(firstCall == true)){
      message.channel.send('–ü—ñ–¥–∞—Ä –æ–±`—è–≤–∏–≤—Å—è!');
	  firstCall = false;
}	  
})
*/

// listener for restart 
client.on('message', message => {
    switch(message.content.toUpperCase()) {
        case '?RESET':
		 message.channel.bulkDelete(1);
            resetBot(message.channel);
            break;
    }
});

// Turn bot off (destroy)
function resetBot(channel) {
    // send channel a message
    channel.send('I`ll be back...')
    .then(msg => client.destroy())
    .then(() => client.login(token));  //–¢–æ–∫–µ–Ω —Å—é–¥–∏!
}


client.login(token); //–¢–æ–∫–µ–Ω —Å—é–¥–∏!
